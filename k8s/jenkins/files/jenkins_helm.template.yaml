# yamllint disable-file
#
# Helm chart config: helm show values jenkinsci/jenkins
# Current chart version: {{ chart_version }}
# Default values for jenkinsci/jenkins chart:
# helm show values jenkinsci/jenkins
namespaceOverride: ci

controller:
{% if use_prebuild_jenkins_image is sameas true %}
  image:
    registry: "quay.io"
    repository: "matihost/jenkins"
    tag: "2.462.2"
    pullPolicy: "Always"
  imagePullPolicy: Always
  initializeOnce: true
  installPlugins: false
{% else %}
  image:
    repository: "jenkins/jenkins"
    tag: "2.462.2"
    tagLabel: jdk17
    pullPolicy: "Always"
  initializeOnce: false
  installLatestPlugins: true
  installLatestSpecifiedPlugins: false
  installPlugins:
  - branch-api
  - pipeline-stage-view
  - kubernetes
  - workflow-job
  - workflow-aggregator
  - cloudbees-disk-usage-simple
  - credentials
  - credentials-binding
  - docker-commons
  - docker-workflow
  - git
  - configuration-as-code
  - timestamper
  - github-branch-source
  - github-oauth
  - ldap
  - google-login
  - matrix-auth
  - authorize-project
  - prometheus
  - simple-theme-plugin
  - jdk-tool
  - command-launcher
  - windows-slaves
{% endif %}
  servicePort: 80
  serviceType: {{ jenkins_service_type|default("NodePort") }}

  podAnnotations:
    rollme: "{{ 10000|random }}"

  ingress:
    enabled: true
    ingressClassName: {{ jenkins_ingress.class|default("nginx") }} # in case GKE: istio, gce-internal, gce-external
    apiVersion: "networking.k8s.io/v1"
    annotations:
      kubernetes.io/ingress.allow-http: "false"  ## in case GKE gce-internal class it disables HTTP
    hostName: {{ jenkins_ingress.host }}
    tls:
    - secretName: {{ jenkins_ingress.secretName }}
      hosts:
      - {{ jenkins_ingress.host }}

  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "{{ jenkins_max_cpu|default('3000m') }}"
      memory: "{{ jenkins_max_memory|default('5Gi') }}"

  sidecars:
    configAutoReload:
      enabled: true

  javaOpts: >
    -Dorg.jenkinsci.plugins.gitclient.Git.timeOut=30

  JCasC:
    enabled: true
    defaultConfig: true
    configScripts:
{% if gke_mode is sameas true %}
      environment-vars: |
        jenkins:
          globalNodeProperties:
            - envVars:
                env:
                - key: "GCP_PROJECT"
                  value: "{{ lookup('pipe', 'gcloud config get-value project') }}"
{% endif %}
      iam: |
        jenkins:
          securityRealm:
            local:
              allowsSignup: false
              enableCaptcha: false
              users:
              - id: "admin"
                name: "{{ jenkins_admin_username|default('admin') }}"
                password: "{{ jenkins_admin_pass|mandatory }}"
              - id: "user"
                name: "user"
                password: "{{ jenkins_admin_pass|mandatory }}"
      authz: |
        jenkins:
          authorizationStrategy:
            projectMatrix:
              entries:
              - group:
                  name: "authenticated"
                  permissions:
                  - "Job/Discover"
                  - "Job/Read"
                  - "Metrics/View"
                  - "Overall/Read"
                  - "View/Read"
              - user:
                  name: "admin"
                  permissions:
                  - "Agent/Build"
                  - "Agent/Configure"
                  - "Agent/Connect"
                  - "Agent/Create"
                  - "Agent/Delete"
                  - "Agent/Disconnect"
                  - "Agent/ExtendedRead"
                  - "Credentials/Create"
                  - "Credentials/Delete"
                  - "Credentials/ManageDomains"
                  - "Credentials/Update"
                  - "Credentials/View"
                  - "Job/Build"
                  - "Job/Cancel"
                  - "Job/Configure"
                  - "Job/Create"
                  - "Job/Delete"
                  - "Job/Discover"
                  - "Job/ExtendedRead"
                  - "Job/Move"
                  - "Job/Read"
                  - "Job/Workspace"
                  - "Metrics/HealthCheck"
                  - "Metrics/ThreadDump"
                  - "Metrics/View"
                  - "Overall/Administer"
                  - "Overall/Read"
                  - "Overall/SystemRead"
                  - "Run/Delete"
                  - "Run/Replay"
                  - "Run/Update"
                  - "SCM/Tag"
                  - "View/Configure"
                  - "View/Create"
                  - "View/Delete"
                  - "View/Read"
              - user:
                  name: "matihost"
                  permissions:
                  - "Overall/Administer"
      welcome-message: |
        jenkins:
          systemMessage: Welcome to the Matihost CI\CD server.
      script-approval: |
        security:
          scriptApproval:
            approvedSignatures:
            - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
            - "new groovy.json.JsonSlurperClassic"
      authorize-project: |
        security:
          queueItemAuthenticator:
            authenticators:
            - global:
                strategy: "triggeringUsersAuthorizationStrategy"
      neo-theme: |
        appearance:
          prism:
            theme: PRISM
          simpleTheme:
            elements:
            - cssUrl:
                url: "https://tobix.github.io/jenkins-neo2-theme/dist/neo-light.css"
serviceAccount:
  name: "{{ namespace }}-jenkins"
  create: true
{% if gke_mode is sameas true %}
  annotations:
    iam.gke.io/gcp-service-account: "{{ namespace }}-jenkins@{{ lookup('pipe', 'gcloud config get-value project') }}.iam.gserviceaccount.com"
{% endif %}
serviceAccountAgent:
  name: "{{ namespace }}-agent"
  create: true
{% if gke_mode is sameas true %}
  annotations:
    iam.gke.io/gcp-service-account: "{{ namespace }}-agent@{{ lookup('pipe', 'gcloud config get-value project') }}.iam.gserviceaccount.com"
{% endif %}
agent:
  #TODO jenkins/inbound-agent mirrored image dissapeared from mirror.gcr.io
  # image: "mirror.gcr.io/jenkins/inbound-agent"
  # tag: "4.11-1"
  # image: "jenkins/inbound-agent"
  # tag: "jdk11-nanoserver-1809"
  resources:
    requests:
      cpu: "50m"
      memory: "64Mi"
    limits:
      cpu: "{{ jenkins_agent_max_cpu|default('2') }}"
      memory: "{{ jenkins_agent_max_memory|default('1Gi') }}"
persistence:
  enabled: true
  size: 16Gi
  storageClass: "{{ jenkins.storageClass | default("") }}"
{% if gke_mode is sameas true %}
backup:
  enabled: true
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "{{ jenkins_agent_max_cpu|default('2') }}"
      memory: "{{ jenkins_agent_max_memory|default('1Gi') }}"
  labels:
    # to prevent injecting istio sidecar as it prevents backup job from completion
    sidecar.istio.io/inject: "false"
  serviceAccount:
    create: false
    name: "{{ namespace }}-jenkins"
  schedule: "0 2 * * *" # at 2am
  destination: "gcs://{{ gcp_project }}-{{ namespace }}-jenkins-server-data/jenkins-backup"
  onlyJobs: true
{% endif %}
