# yamllint disable-file
#
# Helm chart config: helm show values jenkinsci/jenkins
# Current chart version: {{ chart_version }}
# Default values for jenkinsci/jenkins chart:
# helm show values jenkinsci/jenkins
namespaceOverride: ci

controller:
{% if use_prebuild_jenkins_image is sameas true %}
  image: "quay.io/matihost/jenkins"
  tag: "2.387.3"  # has to be semver compliant
  imagePullPolicy: Always
  initializeOnce: true
  installPlugins: false
{% else %}
  image: "jenkins/jenkins"
  tag: "2.387.3"
  initializeOnce: false
  installLatestPlugins: true
  installLatestSpecifiedPlugins: false
  installPlugins:
  - branch-api:2.1071.v1a_188a_562481
  - pipeline-stage-view:2.32
  - kubernetes:3923.v294a_d4250b_91
  - workflow-job:1292.v27d8cc3e2602
  - workflow-aggregator:596.v8c21c963d92d
  - cloudbees-disk-usage-simple:178.v1a_4d2f6359a_8
  - credentials:1254.vb_96f366e7b_a_d
  - credentials-binding:604.vb_64480b_c56ca_
  - docker-commons:419.v8e3cd84ef49c
  - docker-workflow:563.vd5d2e5c4007f
  - git:5.0.1
  - configuration-as-code:1625.v27444588cc3d
  - timestamper:1.25
  - github-branch-source:1703.vd5a_2b_29c6cdc
  - github-oauth:0.39
  - ldap:673.v034ec70ec2b_b_
  - google-login:1.7
  - matrix-auth:3.1.7
  - authorize-project:1.5.1
  - prometheus:2.2.2
  - simple-theme-plugin:160.vb_76454b_67900
  - jdk-tool:63.v62d2fd4b_4793
  - command-launcher:100.v2f6722292ee8
  - windows-slaves:1.8.1
{% endif %}
  servicePort: 80
  serviceType: {{ jenkins_service_type|default("NodePort") }}

  podAnnotations:
    rollme: "{{ 10000|random }}"

  ingress:
    enabled: true
    ingressClassName: {{ jenkins_ingress.class|default("nginx") }} # in case GKE: istio, gce-internal, gce-external
    apiVersion: "networking.k8s.io/v1"
    annotations:
      kubernetes.io/ingress.allow-http: "false"  ## in case GKE gce-internal class it disables HTTP
    hostName: {{ jenkins_ingress.host }}
    tls:
    - secretName: {{ jenkins_ingress.secretName }}
      hosts:
      - {{ jenkins_ingress.host }}

  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "{{ jenkins_max_cpu|default('3000m') }}"
      memory: "{{ jenkins_max_memory|default('5Gi') }}"

  sidecars:
    configAutoReload:
      enabled: true

  javaOpts: >
    -Dorg.jenkinsci.plugins.gitclient.Git.timeOut=30

  JCasC:
    enabled: true
    defaultConfig: true
    configScripts:
{% if gke_mode is sameas true %}
      environment-vars: |
        jenkins:
          globalNodeProperties:
            - envVars:
                env:
                - key: "GCP_PROJECT"
                  value: "{{ lookup('pipe', 'gcloud config get-value project') }}"
{% endif %}
      iam: |
        jenkins:
          securityRealm:
            local:
              allowsSignup: false
              enableCaptcha: false
              users:
              - id: "admin"
                name: "{{ jenkins_admin_username|default('admin') }}"
                password: "{{ jenkins_admin_pass|mandatory }}"
              - id: "user"
                name: "user"
                password: "{{ jenkins_admin_pass|mandatory }}"
      authz: |
        jenkins:
          authorizationStrategy:
            projectMatrix:
              permissions:
              - "GROUP:Job/Discover:authenticated"
              - "GROUP:Job/Read:authenticated"
              - "GROUP:Metrics/View:authenticated"
              - "GROUP:Overall/Read:authenticated"
              - "GROUP:View/Read:authenticated"
              - "USER:Agent/Build:admin"
              - "USER:Agent/Configure:admin"
              - "USER:Agent/Connect:admin"
              - "USER:Agent/Create:admin"
              - "USER:Agent/Delete:admin"
              - "USER:Agent/Disconnect:admin"
              - "USER:Agent/ExtendedRead:admin"
              - "USER:Credentials/Create:admin"
              - "USER:Credentials/Delete:admin"
              - "USER:Credentials/ManageDomains:admin"
              - "USER:Credentials/Update:admin"
              - "USER:Credentials/View:admin"
              - "USER:Job/Build:admin"
              - "USER:Job/Cancel:admin"
              - "USER:Job/Configure:admin"
              - "USER:Job/Create:admin"
              - "USER:Job/Delete:admin"
              - "USER:Job/Discover:admin"
              - "USER:Job/ExtendedRead:admin"
              - "USER:Job/Move:admin"
              - "USER:Job/Read:admin"
              - "USER:Job/Workspace:admin"
              - "USER:Metrics/HealthCheck:admin"
              - "USER:Metrics/ThreadDump:admin"
              - "USER:Metrics/View:admin"
              - "USER:Overall/Administer:admin"
              - "USER:Overall/Administer:matihost"
              - "USER:Overall/Read:admin"
              - "USER:Overall/SystemRead:admin"
              - "USER:Run/Delete:admin"
              - "USER:Run/Replay:admin"
              - "USER:Run/Update:admin"
              - "USER:SCM/Tag:admin"
              - "USER:View/Configure:admin"
              - "USER:View/Create:admin"
              - "USER:View/Delete:admin"
              - "USER:View/Read:admin"
      welcome-message: |
        jenkins:
          systemMessage: Welcome to the Matihost CI\CD server.
      script-approval: |
        security:
          scriptApproval:
            approvedSignatures:
            - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
            - "new groovy.json.JsonSlurperClassic"
      authorize-project: |
        security:
          queueItemAuthenticator:
            authenticators:
            - global:
                strategy: "triggeringUsersAuthorizationStrategy"
      neo-theme: |
        unclassified:
          simple-theme-plugin:
            elements:
              - cssUrl:
                  url: "https://tobix.github.io/jenkins-neo2-theme/dist/neo-light.css"
serviceAccount:
  name: "{{ namespace }}-jenkins"
  create: true
{% if gke_mode is sameas true %}
  annotations:
    iam.gke.io/gcp-service-account: "{{ namespace }}-jenkins@{{ lookup('pipe', 'gcloud config get-value project') }}.iam.gserviceaccount.com"
{% endif %}
serviceAccountAgent:
  name: "{{ namespace }}-agent"
  create: true
{% if gke_mode is sameas true %}
  annotations:
    iam.gke.io/gcp-service-account: "{{ namespace }}-agent@{{ lookup('pipe', 'gcloud config get-value project') }}.iam.gserviceaccount.com"
{% endif %}
agent:
  #TODO jenkins/inbound-agent mirrored image dissapeared from mirror.gcr.io
  # image: "mirror.gcr.io/jenkins/inbound-agent"
  # tag: "4.11-1"
  # image: "jenkins/inbound-agent"
  # tag: "jdk11-nanoserver-1809"
  resources:
    requests:
      cpu: "50m"
      memory: "64Mi"
    limits:
      cpu: "{{ jenkins_agent_max_cpu|default('2') }}"
      memory: "{{ jenkins_agent_max_memory|default('1Gi') }}"
persistence:
  enabled: true
  size: 16Gi
  storageClass: "{{ jenkins.storageClass | default("") }}"
{% if gke_mode is sameas true %}
backup:
  enabled: true
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "{{ jenkins_agent_max_cpu|default('2') }}"
      memory: "{{ jenkins_agent_max_memory|default('1Gi') }}"
  labels:
    # to prevent injecting istio sidecar as it prevents backup job from completion
    sidecar.istio.io/inject: "false"
  serviceAccount:
    create: false
    name: "{{ namespace }}-jenkins"
  schedule: "0 2 * * *" # at 2am
  destination: "gcs://{{ gcp_project }}-{{ namespace }}-jenkins-server-data/jenkins-backup"
  onlyJobs: true
{% endif %}
