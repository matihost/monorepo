[masters]
master.matihost

[etcd]
master.matihost

[nodes]
# master is automatically schedulable
master.matihost

# infra node, needs to be labeled compute in order other apps can be scheduled there
node1.matihost openshift_schedulable=true openshift_node_labels="{'region': 'infra', 'zone': 'default','node-role.kubernetes.io/compute' : 'true'}"

# non infra region automatically is schedulable and compute node
node2.matihost openshift_schedulable=true openshift_node_labels="{'region': 'primary', 'zone': 'default'}"

# Other configuration options:
# - master and infra on one node
# [nodes]
# master.matihost openshift_node_labels="{'region': 'infra','zone': 'default'}" openshift_schedulable=true
# node[1:2].matihost openshift_node_labels="{'region': 'primary', 'zone': 'default'}"

[nfs]
master.matihost

[OSEv3:children]
masters
nodes
etcd
nfs

[OSEv3:vars]
ansible_user=root

openshift_deployment_type=origin
openshift_release=v3.9

openshift_master_default_subdomain=apps.matihost

openshift_disable_check=memory_availability,package_version

debug_level=2

openshift_install_examples=true

openshift_hosted_router_force_subdomain='${name}-${namespace}.apps.matihost'

# adding user on master using httpasswd - ok only for single master mode
# install httpasswd tool on master node - to generate authentication files
#
# sudo yum install httpd-tools
# sudo htpasswd /etc/origin/master/htpasswd userName
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]

# normally htpasswd_file option encrypted with Ansible vault, but this is for learning only
openshift_master_htpasswd_users={'admin': '$apr1$ooNjJEID$BX9/WuzOUVJcpiRTO4uFu0', 'mati': '$apr1$LwyT5llr$f5/fMrQ9/CoezFUZmRtG00','user': '$apr1$BoCnZ.7Z$1jI4yAysxhs0CL1p4lm/J/'}
#openshift_master_htpasswd_file=<path to local pre-generated htpasswd file>


# nfs for registry storage, w/o it it is ephemeral
openshift_hosted_registry_storage_kind=nfs
openshift_hosted_registry_storage_access_modes=['ReadWriteMany']
openshift_hosted_registry_storage_nfs_directory=/exports
openshift_hosted_registry_storage_nfs_options='*(rw,root_squash)'
openshift_hosted_registry_storage_volume_name=registry
openshift_hosted_registry_storage_volume_size=10Gi

# must be enabled, b/c NFS is unsupported for RegistryStorage
openshift_enable_unsupported_configurations=True

# install metrics subsystem in openshift-infra namespace
# default is false
#
# When there is not sufficient memory or lack of CPU,
# it may fail as there is a very short timeout between Hawkular / Cassandra during table creation
# it cannot be changed https://github.com/openshift/origin-metrics/issues/413 and it will be not fixed as Hawkular/Cassandra stack will vanish in 3.11
# when Hawkular Metrics fails with timeout issue, terminate the pod, rc will spawn new one and it will try again...
# When Hawkular Metrics pod starts correctly and Heapster after it -> go to https://hawkular-metrics.apps.matihost/ to so that WebConsole could get metrics from it and show pods  statuses (cpu, mem, network) graphs
#
# Metric subsystem itself takes all the time 1-2 core and ~3 GiB memory.
# Not recommended for dev only installation.
#
openshift_metrics_install_metrics=true

# https://github.com/openshift/origin/issues/19440  - image v3.9.0 is not present in docker.io
# openshift_metrics_image_version has to be overridden
openshift_metrics_image_version=v3.9

# auto create NFS storage on boxes from nfs group for metrics
# creates only on PV so that there cannot be more than one Cassandra pod
# if they have to be more, metrics subsystem should be installed after initial install
openshift_metrics_storage_kind=nfs
openshift_metrics_storage_access_modes=['ReadWriteOnce']
openshift_metrics_storage_nfs_directory=/exports
openshift_metrics_storage_nfs_options='*(rw,root_squash)'
openshift_metrics_storage_volume_name=metrics
openshift_metrics_storage_volume_size=10Gi
openshift_metrics_storage_labels={'storage': 'metrics'}

openshift_metrics_hawkular_replicas=1
openshift_metrics_hawkular_requests_memory=1.5Gi

# each C* pod requires own PV instance, for HA 3 instances of C* are needed
openshift_metrics_cassandra_replicas=1
#openshift_metrics_cassandra_storage_type: "{{ openshift_metrics_storage_kind | default('emptydir') }}"
openshift_metrics_cassandra_storage_type=pv
#openshift_metrics_cassandra_pv_selector: "{{ openshift_metrics_storage_labels | default('') }}"
openshift_metrics_cassandra_pv_selector=''
openshift_metrics_cassandra_pvc_size=5Gi
openshift_metrics_cassandra_pvc_prefix=metrics-cassandra
openshift_metrics_cassandra_limits_memory=2Gi
openshift_metrics_cassandra_requests_memory=1.5Gi

openshift_metrics_heapster_requests_memory=400Mi

# https://github.com/openshift/origin-metrics/issues/424  - bug, by default Prometheus endpoints are disabled
# Prometheus endpoints are exposed on port 7575 and /metrics context path.
openshift_metrics_cassandra_enable_prometheus_endpoint='true'
openshift_metrics_hawkular_enable_prometheus_endpoint='true'
