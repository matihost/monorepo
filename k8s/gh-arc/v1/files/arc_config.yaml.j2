---
# TODO limit privileges to minimum
# this is a workaround for not working rbac.allowGrantingKubernetesContainerModePermissions Helm flag
#
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-arc-rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: actions-runner-controller
  namespace: actions-runner-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: runner-role
  namespace: "{{ repo.ci_namespace | mandatory }}"
rules:
- apiGroups: [ "" ]
  resources: [ "pods" ]
  verbs: [ "get", "list", "create", "delete" ]
- apiGroups: [ "" ]
  resources: [ "pods/exec" ]
  verbs: [ "get", "create" ]
- apiGroups: [ "" ]
  resources: [ "pods/log" ]
  verbs: [ "get", "list", "watch", ]
- apiGroups: [ "batch" ]
  resources: [ "jobs" ]
  verbs: [ "get", "list", "create", "delete" ]
- apiGroups: [ "" ]
  resources: [ "secrets" ]
  verbs: [ "get", "list", "create", "delete" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: runner-role-binding
  namespace: "{{ repo.ci_namespace | mandatory }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: runner-role
subjects:
- kind: ServiceAccount
  name: gh-runner-service-account
  namespace: "{{ repo.ci_namespace | mandatory }}"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gh-runner-service-account
  namespace: "{{ repo.ci_namespace | mandatory }}"
---
apiVersion: actions.summerwind.dev/v1alpha1
kind: RunnerDeployment
metadata:
  name: "{{ repo.name | mandatory | replace('/','-') }}"
  namespace: "{{ repo.ci_namespace | mandatory }}"
spec:
  replicas: {{ runner.min_replicas | default(1) }}
  template:
    metadata:
      labels:
        sidecar.istio.io/inject: "false"
    spec:
      # image: summerwind/actions-runner:latest
      serviceAccountName: "gh-runner-service-account"
      labels:
        - self-hosted
        - linux
        - "{{ repo.name | mandatory }}"
      repository: "{{ repo.name | mandatory }}"
      containerMode: kubernetes
      dockerdWithinRunnerContainer: false
      dockerEnabled: false
      workVolumeClaimTemplate:
        storageClassName: "{{ runner.storage_class | default('standard') }}"
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ runner.storage_size | default('5Gi') }}
      # resources:
      #   limits:
      #     nvidia.com/gpu: 1
---
apiVersion: actions.summerwind.dev/v1alpha1
kind: HorizontalRunnerAutoscaler
metadata:
  name: "{{ repo.name | mandatory | replace('/','-') }}"
  namespace: "{{ repo.ci_namespace | mandatory }}"
spec:
  minReplicas: {{ runner.min_replicas | default(1) }}
  maxReplicas: 10
  scaleTargetRef:
    name: "{{ repo.name | mandatory | replace('/','-') }}"
  scaleUpTriggers:
    - githubEvent:
        workflowJob: {}
      amount: 1
      duration: "5m"
