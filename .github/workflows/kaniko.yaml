---
name: 'CI :: Kaniko'
on:
  push:
    # paths: "k8s/images/*"
    branches:
    - master
    - feature/*
  pull_request:
    # paths: "k8s/images/*"
    branches:
    - master
    - feature/*
  workflow_dispatch:
  # Inputs are only available for workflow_dispatch - the default is not available for other type of triggers
  # https://dev.to/mrmike/github-action-handling-input-default-value-5f2g
    inputs:
      runner:
        description: 'Runner type'
        required: true
        default: 'ubuntu-22.04'
        type: choice
        options:
        - ubuntu-22.04
        - matihost
# https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
permissions:
  actions: read
  contents: read
  security-events: write
concurrency:
  group: kaniko-${{ github.ref }}
  cancel-in-progress: true
env:
  IMAGE_TAG: "${{ github.ref == 'refs/heads/master' && 'latest' || github.sha }}"
  ROOT_IMAGE_TAG: "${{ github.ref == 'refs/heads/master' && 'root' || format('root-{0}', github.sha) }}"
jobs:
  # sources:
  #   name: Checkout sources
  #   runs-on: ${{ inputs.runner || 'ubuntu-22.04' }}
  #   container:
  #     image: maven:3-openjdk-17
  #   steps:
  #   - name: checkout
  #     uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0
  #   # Workaround for https://github.com/actions/runner/issues/2033
  #   - name: Set ownership
  #     run: |
  #       chown -R $(id -u):$(id -g) $PWD
  #   - name: Obtain git version
  #     run: |
  #       echo "GIT_COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
  #   - name: Cache workspace
  #     uses: actions/cache/save@v3
  #     with:
  #       # avoid using github.workspace in caching?
  #       # so how effectivelly share source code between jobs?
  #       # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#cross-os-cache
  #       # artifacts?
  #       # cleaning artifacts after workflow requires custom, non standard action:
  #       # https://github.com/marketplace/actions/delete-artifact
  #       path: ${{ github.workspace }}
  #       key: sources-${{ github.run_id }}-${{ github.run_attempt }}
  #       enableCrossOsArchive: true
  ansible-image:
    # needs: sources
    runs-on: ${{ inputs.runner || 'ubuntu-22.04' }}
    container:
      image: maven:3-openjdk-17
      # image: gcr.io/kaniko-project/executor:debug
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Build Ansible image in GKE hosted runner
      if: ${{ (inputs.runner || 'ubuntu-22.04') != 'ubuntu-22.04' }}
      env:
        GCP_PROJECT: "${{ vars.GCP_PROJECT }}"
      uses: aevea/action-kaniko@master
      with:
        image: gcr.io/${{ env.GCP_PROJECT }}/ansible
        tag: "${{ env.IMAGE_TAG }}"
        path: k8s/images/ansible
        build_file: Dockerfile
        cache: true
    - name: Build Ansible root image in GKE hosted runner
      if: ${{ (inputs.runner || 'ubuntu-22.04') != 'ubuntu-22.04' }}
      env:
        GCP_PROJECT: "${{ vars.GCP_PROJECT }}"
      uses: aevea/action-kaniko@master
      with:
        image: gcr.io/${{ env.GCP_PROJECT }}/ansible
        tag: "${{ env.ROOT_IMAGE_TAG }}"
        path: k8s/images/ansible
        build_file: Dockerfile.root
        cache: true
    - name: Build Ansible image on GH hosted runner
      if: ${{ (inputs.runner || 'ubuntu-22.04') == 'ubuntu-22.04' }}
      uses: aevea/action-kaniko@master
      with:
        registry: ${{ vars.REGISTRY }}
        image: matihost/ansible
        tag: "${{ env.IMAGE_TAG }}"
        username: "${{ secrets.REGISTRY_USER }}"
        password: "${{ secrets.REGISTRY_PASSWORD }}"
        path: k8s/images/ansible
        build_file: Dockerfile
        cache: true
        debug: true
    - name: Build Ansible root image on GH hosted runner
      if: ${{ (inputs.runner || 'ubuntu-22.04') == 'ubuntu-22.04' }}
      uses: aevea/action-kaniko@master
      with:
        registry: ${{ vars.REGISTRY }}
        image: matihost/ansible
        tag: "${{ env.ROOT_IMAGE_TAG }}"
        username: "${{ secrets.REGISTRY_USER }}"
        password: "${{ secrets.REGISTRY_PASSWORD }}"
        path: k8s/images/ansible
        build_file: Dockerfile.root
        cache: true
        debug: true
