# Tools

### VSCode ###
.vscode
*.code-workspace

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache

### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr

### NetBeans ###
/nbproject/private/
/build/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/


# Build files
.build-workspace
galaxy
target
vendor

# Python Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Python Distribution / packaging
.venv
build/
dist/
*.egg-info/
*.egg
*.eggs
*~

# Python Unit test / coverage reports
.[nt]ox/
htmlcov/
.coverage
.coverage.*
.*cache
nosetests.xml
coverage.xml
*.cover
tests/data/common_wheels/

# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# go modules
go.sum

# Test binary, build with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Terraform
# Local .terraform directories
**/.terraform/*
**/.terraform.lock.hcl

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Exclude all .tfvars files, which are likely to contain sentitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
#
*.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Terragrunt
**/.terragrunt-cache/*


# Terraformer
**/generated/*

# Vagrant
.vagrant/
