---
- name: Updates system software versions
  hosts: local
  gather_facts: true
  tasks:
  - when: ansible_os_family == "Debian"
    block:
    - name: Update packages for Debian based distribution
      ansible.builtin.apt:
        name: "*"
        state: latest
        update_cache: yes
        cache_valid_time: "{{ update_cache_timeout }}"
        force_apt_get: yes
    - name: Upgrade all packages to the latest version in Debian distribution
      ansible.builtin.apt:
        upgrade: dist
        force_apt_get: yes
    - name: Remove dependencies that are no longer required from Debian based system
      ansible.builtin.apt:
        autoremove: yes
        force_apt_get: yes
    - name: Remove useless packages from the cache from Debian based system
      ansible.builtin.apt:
        autoclean: yes
        force_apt_get: yes


  - when: ansible_os_family == "RedHat"
    block:
    - name: Update packages for RHEL based distribution
      ansible.builtin.yum:
        name: "*"
        update_cache: yes
        state: latest
    - name: Remove dependencies that are no longer required from RHEL based system
      ansible.builtin.yum:
        autoremove: yes
    - name: Remove useless packages from the cache from RHEL based system
      ansible.builtin.shell:
        yum clean all
      register: yum_result
      changed_when: '"0 files removed" not in yum_result.stdout'

  - name: Check whether snap is present on the machine
    ansible.builtin.shell: which snap
    ignore_errors: true
    changed_when: false
    register: snap_presence

  - name: Update snap packages
    ansible.builtin.shell: snap refresh
    register: snap_result
    changed_when: not (snap_result.stderr is search('All snaps up to date.'))
    when: snap_presence.rc == 0

  - become: false
    block:
    - name: Update SDKMan and its installations
      ansible.builtin.shell: "bash -ic 'sdk selfupdate && sdk update && sdk ug'"
      register: sdk_result
      ignore_errors: true
      changed_when:
      - sdk_result.stdout is regex('Installing')

  - become: false
    block:
    - name: Check whether helm is present on the machine
      ansible.builtin.shell: which helm
      ignore_errors: true
      changed_when: false
      register: helm_presence
    - name: Update helm repositories
      ansible.builtin.shell: helm repo update
      changed_when: true
      when: helm_presence.rc == 0

  - become: false
    block:
    - name: Check whether vagrant is present on the machine
      ansible.builtin.shell: which vagrant
      ignore_errors: true
      changed_when: false
      register: vagrant_presence
    - name: Update vagrant plugins
      ansible.builtin.shell: vagrant plugin update
      changed_when: true
      when: vagrant_presence.rc == 0

  - become: false
    block:
    - name: Check whether ibmcloud is present on the machine
      ansible.builtin.shell: which vagrant
      ignore_errors: true
      changed_when: false
      register: ibmcloud_presence
    - name: Update ibmcloud CLI
      ansible.builtin.shell: |
        ibmcloud update
        ibmcloud plugin update --all
      changed_when: true
      when: ibmcloud_presence.rc == 0

  - become: false
    block:
    - name: Check whether poetry is present on the machine
      ansible.builtin.shell: which vagrant
      ignore_errors: true
      changed_when: false
      register: poetry_presence
    - name: Update poetry CLI
      ansible.builtin.shell: |
        poetry self update
      register: sdk_result
      changed_when:
      - sdk_result.stdout is not regex('No dependencies to install or update')
      when: poetry_presence.rc == 0
