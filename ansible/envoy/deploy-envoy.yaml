---
- hosts: localhost
  become: true
  vars:
    files: "{{ playbook_dir }}/files"
  tasks:
  - name: Ensure Envoy config directory present
    ansible.builtin.file:
      path: "/etc/envoy"
      state: directory
      owner: root
      group: root
      mode: '0755'
  - name: Ensure Envoy admin config file present
    ansible.builtin.copy:
      dest: "/etc/envoy/admin.yaml"
      content: "{{ lookup('template', files + '/admin.yaml.j2') }}"
  - name: Ensure Envoy main config file present
    ansible.builtin.copy:
      dest: "/etc/envoy/envoy.yaml"
      content: "{{ lookup('template', files + '/' + envoy.template_config|mandatory) }}"
  - name: Ensure Envoy systemd config setup
    ansible.builtin.copy:
      dest: "/etc/systemd/system/envoy.service"
      src: "{{ files }}/envoy.service"

  - name: Ensure TLS for Envoy is present
    block:
    - name: "Ensure self-signed TLS CN={{ envoy.tls.cn }} is present"
      ansible.builtin.include_role:
        name: create_certificate
      vars:
        certificate_def:
          cn: "{{ envoy.tls.cn }}"
    - name: Ensure Envoy TLS key file present
      ansible.builtin.copy:
        dest: "/etc/envoy/tls.key"
        content: "{{ tls.key | b64decode }}"
    - name: Ensure Envoy TLS cert file present
      ansible.builtin.copy:
        dest: "/etc/envoy/tls.crt"
        content: "{{ tls.crt | b64decode }}"
    become: true
    when: envoy.tls.cn is defined and envoy.tls.cn


  - name: Ensure Envoy systemd service is restarted
    ansible.builtin.systemd:
      state: restarted
      enabled: true
      daemon_reload: yes
      name: envoy
  - name: Give Envoy time to start
    ansible.builtin.pause:
      seconds: 5
  - name: Ensure Envoy systemd service is started
    ansible.builtin.systemd:
      state: started
      name: envoy
    register: envoy_systemd
    retries: 1
    delay: 10
    until: envoy_systemd.status.ActiveState == 'active'
    failed_when: envoy_systemd.status.ActiveState != 'active'
