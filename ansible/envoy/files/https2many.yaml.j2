static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: {{ envoy.port | mandatory }}
    per_connection_buffer_limit_bytes: 32768  # 32 KiB
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          use_remote_address: true
          skip_xff_append: false
          xff_num_trusted_hops: 0
          normalize_path: true
          merge_slashes: true
          common_http_protocol_options:
            idle_timeout: 3600s  # 1 hour
            headers_with_underscores_action: REJECT_REQUEST
          http2_protocol_options:
            max_concurrent_streams: 100
            initial_stream_window_size: 65536  # 64 KiB
            initial_connection_window_size: 1048576  # 1 MiB
          stream_idle_timeout: 600s  # 10 mins, must be disabled for long-lived and streaming requests
          request_timeout: 600s  # 10 mins, must be disabled for long-lived and streaming requests
          set_current_client_cert_details:
            subject: true
          http_filters:
            - name: envoy.filters.http.router
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: "/dev/stdout"
              log_format:
                omit_empty_values: true
                json_format:
                  # https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#config-access-log-format-dictionaries
                  ts: "%START_TIME%"
                  tlsVer: "%DOWNSTREAM_TLS_VERSION%"
                  tlsCipher: "%DOWNSTREAM_TLS_CIPHER%"
                  sni: "%REQUESTED_SERVER_NAME%"
                  host: "%REQ(:AUTHORITY)%"
                  hostIp: "%DOWNSTREAM_LOCAL_ADDRESS_WITHOUT_PORT%"
                  downClientIp: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                  path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                  instance: "%HOSTNAME%"
                  method: "%REQ(:METHOD)%"
                  headers:
                    id: "%REQ(X-REQUEST-ID)%"
                    cid: "%REQ(CORRELATION-ID)%"
                    sid: "%REQ(SESSION-ID)%"
                    xff: "%REQ(X-FORWARDED-FOR)%"
                    contentType: "%REQ(CONTENT-TYPE)%"
                  route:
                    name: "%ROUTE_NAME%"
                    cluster: "%UPSTREAM_CLUSTER%"
                    target: "%UPSTREAM_HOST%"
                    transportFailure: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                  rqsize: "%BYTES_RECEIVED%"
                  duration: "%DURATION%"
                  rqDuration: "%REQUEST_DURATION%"
                  rsSize: "%BYTES_SENT%"
                  rsStatus: "%RESPONSE_CODE%"
                  rsStatusDetails: "%RESPONSE_CODE_DETAILS%"
                  rsDuration: "%RESPONSE_DURATION%"
                  rsTxDuration: "%RESPONSE_TX_DURATION%"
                  rsFlags: "%RESPONSE_FLAGS%"
          route_config:
            name: local_route
            request_headers_to_remove: "X-Forwarded-For"
            request_headers_to_add:
              header:
                key: "X-Forwarded-For"
                value: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
              append: false  # override value
            virtual_hosts:
              - name: https_backend
                domains: ["api.https.*"]
                routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: https
                      auto_host_rewrite: true
              - name: http_backend
                domains: ["api.http.*"]
                routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: http
                      auto_host_rewrite: true
              - name: all
                domains: ["*"]
                routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: all
                      auto_host_rewrite: true
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          require_client_certificate: true
          common_tls_context:
            tls_certificates:
              - certificate_chain:
                  filename: /etc/envoy/tls.crt
                private_key:
                  filename: /etc/envoy/tls.key
  clusters:
    - name: https
      connect_timeout: 30s
      per_connection_buffer_limit_bytes: 32768  # 32 KiB
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: https
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address:  {{ envoy.https_target_url | mandatory }}
                      port_value: 443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: {{ envoy.https_target_url | mandatory }}
    - name: http
      connect_timeout: 30s
      per_connection_buffer_limit_bytes: 32768  # 32 KiB
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: http
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address:  {{ envoy.http_target_url | mandatory }}
                      port_value: 80
      transport_socket:
        name: envoy.transport_sockets.raw_buffer
    - name: all
      connect_timeout: 30s
      per_connection_buffer_limit_bytes: 32768  # 32 KiB
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: all
        endpoints:
          - load_balancing_weight: 50
            lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: "{{ envoy.http_target_url | mandatory }}"
                      port_value: 80
          - load_balancing_weight: 50
            lb_endpoints:
              - metadata:
                  filter_metadata:
                    "envoy.transport_socket_match":
                      is_tls: "true"
                endpoint:
                  address:
                    socket_address:
                      address: {{ envoy.https_target_url | mandatory }}
                      port_value: 443
      transport_socket_matches:
        - name: "tls"
          match:
            is_tls: "true"
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              sni: {{ envoy.https_target_url | mandatory }}
        - name: "defaultToPlaintext"
          match: {}
          transport_socket:
            name: envoy.transport_sockets.raw_buffer
